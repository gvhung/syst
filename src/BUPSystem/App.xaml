<Application x:Class="BUPSystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Login.xaml">
    <Application.Resources>
        <LinearGradientBrush x:Key="MainMenuIconBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFEEEEEE" Offset="0"/>
            <GradientStop Color="#FFBDBDBD" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="pressed" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFDADADA" Offset="0"/>
            <GradientStop Color="#FFA6A6A6" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="MainMenuButton" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
                            <Rectangle x:Name="backgroundRect" Fill="{DynamicResource MainMenuIconBackground}" Stroke="#FF939393"/>
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="backgroundRect" Property="Fill" Value="{DynamicResource pressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.75" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        
        <ControlTemplate x:Key="ValidationTemplate" >
            <DockPanel>
                <AdornedElementPlaceholder Name="MyAdornedElement" />
                <TextBlock FontSize="14" Text="?" Margin="3,2,0,0" Foreground="Red" Visibility="{Binding ElementName=MyAdornedElement,Path=AdornedElement.Visibility}"
                   ToolTip="{Binding ElementName=MyAdornedElement,Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
            </DockPanel>
        </ControlTemplate>
        
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
